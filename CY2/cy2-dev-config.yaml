$schema: "1.0"
name: devbox-customization
tasks:
### Winget App Configuration ###
  - name: winget
    parameters:
      package: Microsoft.PowerShell

  - name: winget
    parameters:
      package: GitHub.GitHubDesktop

  - name: winget
    parameters:
      package: 7zip.7zip

  - name: winget
    parameters:
      package: Notepad++.Notepad++

  - name: winget
    parameters:
      package: Google.Chrome

### Chocolatey App Installation ###

  - name: choco
    description: Install Git
    parameters:
      package: git

  - name: choco
    description: Install Make
    parameters:
      package: make

  - name: choco
    description: Install Docker Desktop
    parameters:
      package: docker-desktop

  - name: choco
    description: Install PHP
    parameters:
      package: php 
      version: 8.3.13

  - name: choco
    description: Install Composer
    parameters:
      package: composer

  - name: choco
    description: Install Visual Studio Code
    parameters:
      package: vscode

### USER SETUP ###

  - name: powershell
    description: Install Microsoft.VCLibs.140.00.UWPDesktop
    parameters:
      command: |
        Write-Host "Install VCLibs UWP Desktop Update"
        Add-AppxPackage 'https://aka.ms/Microsoft.VCLibs.x86.14.00.Desktop.appx'
        Get-AppxPackage -Name "Microsoft.VC*" | Select Name, Architecture, Version | FT
      runAsUser: true

  - name: powershell
    description: Install Elastic Agent
    parameters:
      command: |
        Write-Host "Installing Elastic Agent"
        $ProgressPreference = 'SilentlyContinue'
        Invoke-WebRequest -Uri https://artifacts.elastic.co/downloads/beats/elastic-agent/elastic-agent-8.15.3-windows-x86_64.zip -OutFile elastic-agent-8.15.3-windows-x86_64.zip
        Expand-Archive .\elastic-agent-8.15.3-windows-x86_64.zip -DestinationPath .
        cd elastic-agent-8.15.3-windows-x86_64
        .\elastic-agent.exe install -f --url=https://b1d6944f978c4e718656dfead30f3395.fleet.eu-west-2.aws.cloud.es.io:443 --enrollment-token=Um1XVDJKSUJXTVE4MHpTdW5RNUk6aGRfbVptcU9TRjZmSEFHMjUzMS0wZw==
      runAsUser: true

  - name: powershell
    description: Install VSCode extensions
    parameters:
      command: |
        Write-Host "Install VSCode Extensions"
        code --install-extension ms-vscode.powershell
        code --install-extension ms-azuretools.vscode-docker
        code --install-extension ms-vscode.makefile-tools
        code --install-extension redhat.vscode-yaml
        code --install-extension onecentlin.laravel5-snippets
        code --install-extension onecentlin.laravel-blade
        code --install-extension DEVSENSE.phptools-vscode
        code --install-extension ms-python.python
        code --install-extension ms-python.debugpy
        code --install-extension ms-vscode-remote.remote-wsl
      runAsUser: true

  - name: powershell
    description: Run Cleanup Commands
    parameters:
      command: |
        Write-Host "Running Cleanup"          
        # Add to docker-users group
        $username = [System.Security.Principal.WindowsIdentity]::GetCurrent().Name
        Add-LocalGroupMember -Group "docker-users" -Member $username

        # Remove admin permissions
        Remove-LocalGroupMember -Group "Administrators" -Member $username

        # Countdown and notification for restart
        $seconds = 120  # Countdown duration in seconds
        for ($i = $seconds; $i -gt 0; $i--) {
          Write-Host "Restarting in $i seconds..." -NoNewline
          Start-Sleep -Seconds 1
          Write-Host " `r"  # Return carriage to overwrite countdown line
        }

        # Force restart the machine
        Restart-Computer -Force
      runAsUser: true
